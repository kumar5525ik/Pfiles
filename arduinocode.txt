#include <Servo.h>

Servo myservo;
const int trigPin = 9;
const int echoPin = 10;
const int buzzerPin = 12; // Change this to the pin connected to your buzzer

float duration, distance, p;
int pos = 0;

void setup() {
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(buzzerPin, OUTPUT); // Initialize the buzzer pin
  Serial.begin(9600);
  myservo.attach(11);
}

void loop() {
  if (Serial.available() > 0) {
    boolean objectDetected = false;

    for (pos = 0; pos <= 180; pos += 30) {
      myservo.write(pos);
      Serial.println(pos);
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);

      duration = pulseIn(echoPin, HIGH);
      // Adjust the speed of sound based on your environment
      float speedOfSound = 343; // m/s
      distance = (duration / 2) * (speedOfSound / 10000); // Convert to centimeters
      p = distance * 1000;
      Serial.println(p);

      // Check if an object is detected
      if (distance < 30) { // Adjust the threshold as needed
        objectDetected = true;
        break; // Exit the loop if an object is detected
      }

      delay(500);
    }

    if (objectDetected) {
      // Object detected, turn on the buzzer
      digitalWrite(buzzerPin, HIGH);
      delay(1000); // Adjust the duration the buzzer stays on as needed
      digitalWrite(buzzerPin, LOW);
    }

    objectDetected = false; // Reset the flag

    for (pos = 180; pos >= 0; pos -= 30) {
      myservo.write(pos);
      Serial.println(pos);
      digitalWrite(trigPin, LOW);
      delayMicroseconds(2);
      digitalWrite(trigPin, HIGH);
      delayMicroseconds(10);
      digitalWrite(trigPin, LOW);

      duration = pulseIn(echoPin, HIGH);
      // Adjust the speed of sound based on your environment
      float speedOfSound = 343; // m/s
      distance = (duration / 2) * (speedOfSound / 10000); // Convert to centimeters
      p = distance * 1000;
      Serial.println(p);

      // Check if an object is detected
      if (distance < 30) { // Adjust the threshold as needed
        objectDetected = true;
        break; // Exit the loop if an object is detected
      }

      delay(500);
    }

    if (objectDetected) {
      // Object detected, turn on the buzzer
      digitalWrite(buzzerPin, HIGH);
      delay(1000); // Adjust the duration the buzzer stays on as needed
      digitalWrite(buzzerPin, LOW);
    }
  }
}
